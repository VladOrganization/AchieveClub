services:
  frontend:
    image: ghcr.io/vladorganization/achieve_club_frontend:latest
    container_name: achieve_club_frontend
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/etc/nginx/ssl:ro
    environment:
      - VITE_API_URL=https://byteschool.online
      - VITE_API_PORT=5001
    networks:
      - backend
  backend:
    image: ghcr.io/vladorganization/achieve_club_backend:latest
    container_name: achieve_club_backend
    restart: always
    env_file: stack.env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "5000:8080"
      - "5001:8081"
    volumes:
      - certs:/var/letsencrypt
      - /home/ftpuser/ftp/upload/wwwroot:/app/wwwroot
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__RedisConnection=redis:6379
    networks:
      - backend

  postgres:
    image: postgres:latest
    container_name: postgres
    restart: always
    env_file: stack.env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - backend
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    command: --interval 300 --debug ghcr.io/vladorganization/achieve_club_backend
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:
  certs:

networks:
  backend:
    driver: bridge