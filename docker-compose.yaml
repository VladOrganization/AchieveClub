services:
  backend:
    image: ghcr.io/vlad-chigrinov/achieve_club_backend:latest
    container_name: achieve_club_backend
    restart: always
    depends_on:
      - postgres
      - redis
    ports:
      - "5000:8080"
      - "5001:8081"
    env_file:
      - .env
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - ConnectionStrings__RedisConnection=redis:6379
    networks:
      - backend

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - backend

  watchtower:
    image: containrrr/watchtower
    container_name: watchtower
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_POLL_INTERVAL=300
    command: --interval 300 --debug ghcr.io/vlad-chigrinov/achieve_club_backend
    networks:
      - backend

volumes:
  postgres_data:
  redis_data:

networks:
  backend:
    driver: bridge